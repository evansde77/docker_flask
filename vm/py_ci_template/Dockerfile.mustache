# Use phusion/baseimage as base image. To make your builds reproducible, make
# sure you lock down to a specific version, not to `latest`!
# See https://github.com/phusion/baseimage-docker/blob/master/Changelog.md for
# a list of version numbers.
FROM phusion/baseimage:latest

# Use baseimage-docker's init system.
CMD ["/sbin/my_init"]

RUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
RUN echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" | tee /etc/apt/sources.list.d/docker.list

RUN apt-get update && apt-cache policy docker-engine && apt-get -y install git-core\
    curl\
    bzip2\
    build-essential\
    libssl-dev\
    libffi-dev\
    zlib1g-dev\
    libbz2-dev\
    libreadline-dev\
    libsqlite3-dev\
    wget\
    llvm\
    gfortran\
    libncurses5-dev\
    libkrb5-dev\ 
    libsasl2-dev\
    python-lxml\
    nano\
    nginx\
    docker-engine

# ...put your own build instructions here...

{{#runit_services}}
ADD  {{.}} /etc/sv/{{.}}
{{/runit_services}}

{{#nginxconfs}}
ADD nginx/{{.}} /etc/nginx/sites-available/{{.}}
RUN ln -s /etc/nginx/sites-available/{{.}} /etc/nginx/sites-enabled/{{.}}
{{/nginxconfs}}
RUN rm -f  /etc/nginx/sites-enabled/default


ADD runit_setup.sh /runit_setup.sh
RUN . /runit_setup.sh

WORKDIR /opt/{{user}}
RUN mkdir -p /opt/{{user}}/emperor/vassals
RUN mkdir -p /opt/{{user}}/logs
RUN mkdir -p /opt/{{user}}/config
RUN mkdir -p /opt/{{user}}/emperor/vassals/


RUN groupadd {{group}}
RUN useradd -m -g {{group}} {{user}}
ADD gitconfig /opt/{{user}}/.gitconfig
ADD python-requirements.txt /opt/{{user}}/user-requirements.txt
RUN chown -R {{user}}:{{group}} /opt/{{user}}

ENV HOME  /opt/{{user}}
ENV PYENV_ROOT $HOME/.pyenv
ENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH

ADD pyenv_setup.sh /opt/{{user}}/pyenv_setup.sh
RUN . /opt/{{user}}/pyenv_setup.sh
ADD venv_setup.sh /opt/{{user}}/venv_setup.sh
RUN . /opt/{{user}}/venv_setup.sh
ADD robot-installer.sh /opt/{{user}}/robot-installer.sh
ADD cirrus_setup.sh /opt/{{user}}/cirrus_setup.sh
RUN . /opt/{{user}}/cirrus_setup.sh

# Clean up APT when done.
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*